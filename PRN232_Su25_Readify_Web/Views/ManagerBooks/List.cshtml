@using PRN232_Su25_Readify_WebAPI.Models;
@using PRN232_Su25_Readify_Web.Dtos;
@model PagedResults<Book>
@{
    Layout = "~/Views/Shared/_PartialManager.cshtml";
}

@if (TempData["Success"] != null)
{
    <div class="alert alert-success">
        @TempData["Success"]
    </div>
}
@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}

<form method="get" class="row mb-3 mt-2" asp-controller="" asp-action="Index">
    <div class="col-md-8">
        <div class="input-group">
            <input type="text" name="keyword" class="form-control" placeholder="Tìm kiếm sách..." value="@Context.Request.Query["keyword"]" />
            <button type="submit" class="btn btn-outline-secondary">Tìm kiếm</button>
        </div>
    </div>
    <div class="col-md-4 text-end">
        <a class="btn btn-primary" asp-action="Create">+ Thêm Sách</a>
    </div>
</form>

<table class="table table-striped table-hover align-middle">
    <thead class="table-light">
        <tr>
            <th>No</th>
            <th>Image</th>
            <th>Title</th>
            <th>Price</th>
            <th>Update Date</th>
            <th>Active</th>
            <th>Publish</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @{
            int y = (Model.CurrentPage - 1) * Model.PageSize + 1;
        }
        @foreach (var book in Model.Items)
        {
            <tr>
                <td>@y</td>
                <td><img src="@book.ImageUrl" style="max-height:60px; max-width:40px" /></td>
                <td>@book.Title</td>
                <td>@book.Price.ToString("N0")</td>
                <td>@((book.UpdateDate ?? book.CreateDate)?.ToString("dd/MM/yyyy HH:mm"))</td>
                <td>@(book.IsActive ? "Active" : "Inactive")</td>
                <td>@(book.IsPublished ? "Publish" : "Unpublish")</td>
                <td>
                    <a type="submit" asp-action="Details" asp-route-bookId="@book.Id" class="btn btn-danger btn-sm">Xem</a>
                </td>
            </tr>
            y++;
        }
    </tbody>
</table>

<!-- Pagination -->
<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center">
        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("BookManager", new { keyword = Context.Request.Query["keyword"], pageNumber = 1 })">Đầu</a>
        </li>
        @{
            int maxPagesToShow = 3;
            int currentPage = Model.CurrentPage;
            int totalPages = Model.TotalPages;
            int startPage = Math.Max(1, currentPage - 1);
            int endPage = Math.Min(startPage + maxPagesToShow - 1, totalPages);

            if (endPage - startPage < maxPagesToShow - 1)
            {
                startPage = Math.Max(1, endPage - maxPagesToShow + 1);
            }

            for (int i = startPage; i <= endPage; i++)
            {
                <li class="page-item @(currentPage == i ? "active" : "")">
                    <a class="page-link" href="@Url.Action("BookManager", new { keyword = Context.Request.Query["keyword"], pageNumber = i })">@i</a>
                </li>
            }
        }
        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
            <a class="page-link" href="@Url.Action("BookManager", new { keyword = Context.Request.Query["keyword"], pageNumber = Model.TotalPages })">Cuối</a>
        </li>
    </ul>
</nav>