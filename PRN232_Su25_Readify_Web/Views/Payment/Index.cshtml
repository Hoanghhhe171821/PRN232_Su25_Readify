@page
@{
}
<h2 style="text-align: center; margin-top: 20px; margin-bottom: 20px;">Payment History</h2>

<table id="paymentTable" class="display" style="width:100%; margin-top: 200px;">
    <thead>
        <tr>
            <th>No</th>
            <th>User Name</th>
            <th>Points</th>
            <th>Amount</th>
            <th>Status</th>
            <th>Created At</th>
            <th>Action</th>
        </tr>
    </thead>
</table>
<script src="https://code.jquery.com/jquery-3.7.1.min.js"></script>
<script src="https://cdn.datatables.net/1.13.6/js/jquery.dataTables.min.js"></script>
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css">
<!-- Include Bootstrap CSS & JS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
<script>
    function loadPaymentDataTable() {
      $('#paymentTable').DataTable({
        destroy: true,
        ajax: {
          url: 'https://localhost:7267/api/Payment/TopUp/getAllPayments',
          dataSrc: ''
        },
        columns: [
          { 
              data: 'id',
              render: function (data, type, row, meta) {
                    return `<span class="text-center fw-bold">${meta.row + 1}</span>`;
              }
          },
          { data: 'userName' },
          { data: 'points' },
          { data: 'amount' },
          {
              data: 'status',
              render: function (data, type, row) {
                if (data === 'SUCCESS') {
                    return '<span class="badge bg-success">Success</span>';
                } else if (data === 'FAILED') {
                    return '<span class="badge bg-danger">Failed</span>';
                } else if (data === 'PENDING') {
                    return '<span class="badge bg-warning">Pending</span>';
                } else {
                    return '<span class="badge bg-secondary">Unknown</span>';
                }
              }
          },
          {
              data: 'createdAt',
              render: function (data, type, row) {
                const date = new Date(data);
                const day = String(date.getDate()).padStart(2, '0');
                const month = String(date.getMonth() + 1).padStart(2, '0'); // months are 0-based
                const year = date.getFullYear();
                return `${day}/${month}/${year}`;
              }
          },
          {
            data: null,
            className: 'text-center',
            render: function (data, type, row) {
                const isDisabled = row.status === 'SUCCESS' || row.status === 'FAILED';
                const disabledAttr = isDisabled ? 'disabled' : '';

                return `
                  <button class="btn btn-success btn-sm accept-btn" data-id="${row.id}" title="Accept" ${disabledAttr}>
                    <i class="bi bi-check-circle"></i>
                  </button>
                  <button class="btn btn-danger btn-sm reject-btn" data-id="${row.id}" title="Reject" ${disabledAttr}>
                    <i class="bi bi-x-circle"></i>
                  </button>
                   <button class="btn btn-secondary btn-sm print-btn" data-id="${row.id}" title="Print">
                    <i class="bi bi-printer"></i>
                  </button>
                `;
            }
          }
        ]
      });
    }
    function formatDate(dateString) {
        const date = new Date(dateString);
        return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();
    }

    // Call on page load
    $(document).ready(function () {
      loadPaymentDataTable();
          $('#paymentTable').on('click', '.accept-btn', function () {
      const id = $(this).data('id');

      Swal.fire({
        title: 'Accept Payment?',
        icon: 'question',
        showCancelButton: true,
        confirmButtonText: 'Yes, accept',
        cancelButtonText: 'Cancel'
      }).then((result) => {
        if (result.isConfirmed) {
          // Call your API to accept
          $.ajax({
            url: `https://localhost:7267/api/Payment/TopUp/disbursePayment`,
            type: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify({ 
                topUpTransactionId: id,
                status: 'SUCCESS'
            }),
            success: function () {
              Swal.fire('Accepted!', '', 'success');
              $('#paymentTable').DataTable().ajax.reload();
            },
            error: function (error) {
                console.log(error);
                Swal.fire('Error!', `${error.responseJSON.message}`, 'error');
            }
          });
        }
      });
    });

     $('#paymentTable').on('click', '.reject-btn', function () {
      const id = $(this).data('id');

      Swal.fire({
        title: 'Reject Payment?',
        icon: 'warning',
        showCancelButton: true,
        confirmButtonText: 'Yes, reject',
        cancelButtonText: 'Cancel'
      }).then((result) => {
        if (result.isConfirmed) {
          // Call your API to reject
          $.ajax({
            url: `https://localhost:7267/api/Payment/TopUp/disbursePayment`,
            type: 'PUT',
            contentType: 'application/json',
            data: JSON.stringify({ 
                topUpTransactionId: id,
                status: 'FAILED'
            }),
            success: function () {
              Swal.fire('Rejected!', '', 'success');
              $('#paymentTable').DataTable().ajax.reload();
            },
            error: function (error) {
                console.log(error);
                Swal.fire('Error!', `${error.responseJSON.message}`, 'error');
            }
          });
        }
      });
     });

     $('#paymentTable').on('click', '.print-btn', function () {
    const id = $(this).data('id');
    const rowData = $('#paymentTable').DataTable().rows().data().toArray().find(r => r.id === id);
    if (!rowData) return;

    const printWindow = window.open('', '_blank');

    const html = `
    <!DOCTYPE html>
    <html>
    <head>
        <title>Payment Receipt</title>
        <style>
            body { font-family: Arial, sans-serif; padding: 20px; }
            h2 { text-align: center; }
            table { width: 100%; border-collapse: collapse; margin-top: 20px; }
            td, th { border: 1px solid #ccc; padding: 8px; }
        </style>
    </head>
    <body>
        <h2>Payment Receipt</h2>
        <table>
            <tr><th>ID</th><td>${rowData.id}</td></tr>
            <tr><th>User</th><td>${rowData.userName}</td></tr>
            <tr><th>Amount</th><td>${rowData.amount}</td></tr>
            <tr><th>Status</th><td>${rowData.status}</td></tr>
            <tr><th>Created At</th><td>${formatDate(rowData.createdAt)}</td></tr>
        </table>
        <script>
            window.onload = function () {
                window.print();
                setTimeout(() => window.close(), 100);
            };
</\script>
<\/body>
<\/html>
    `;

    printWindow.document.open(); // Open first!
    printWindow.document.write(html); // Then write HTML
    printWindow.document.close(); // Then close to trigger DOM load
});


    });
</script>
